name: Helm CD

on:
  push:

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Azure Login via OIDC
        uses: azure/login@v1
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ secrets.TF_STATE_RESOURCE_GROUP }} \
            --name aks-inenp-cluster \
            --overwrite-existing

      - name: Deploy Service A with Helm
        run: |
          helm upgrade --install service-a ./charts/service-a \
            --namespace app \
            --create-namespace \
            --set image.tag=${{ github.sha }}

      - name: Deploy Service B with Helm
        run: |
          helm upgrade --install service-b ./charts/service-b \
            --namespace app \
            --create-namespace \
            --set image.tag=${{ github.sha }} \
            --set ingress.enabled=true \
            --set ingress.className="azure-application-gateway"

      - name: Deploy Database with Helm
        run: |
          helm upgrade --install database ./charts/database \
            --namespace app \
            --create-namespace \
            --set postgresql.enabled=false

      - name: Wait for deployments
        run: |
          kubectl wait --for=condition=available --timeout=300s deployment/service-a -n app
          kubectl wait --for=condition=available --timeout=300s deployment/service-b -n app

      - name: Verify deployment
        run: |
          kubectl get pods,svc,ingress -n app